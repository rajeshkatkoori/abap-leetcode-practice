*1249. Minimum Remove to Make Valid Parentheses

CLASS zcl_utility DEFINITION FINAL .

  PUBLIC SECTION.


    CLASS-METHODS make_valid_parentheses .

  PRIVATE SECTION.



ENDCLASS.


CLASS zcl_utility IMPLEMENTATION.
*----------------------------------------------------------------------*
*  Method Make_Valid_Parentheses                                       *
*  Leetcode Code 1249. Minimum Remove to Make Valid Parentheses        *
*  Input: s = "lee(t(c)o)de)",Output: "lee(t(c)o)de" or "lee(t(c)ode)"
*  Input: s = "a)b(c)d" -> Output: "ab(c)d"
*----------------------------------------------------------------------*
  METHOD make_valid_parentheses.

    DATA: result          TYPE string,
          stack           TYPE TABLE OF i WITH EMPTY KEY,
          indexestoremove TYPE TABLE OF i WITH EMPTY KEY.

    DATA(lv_input) = 'lee(t(c)o)de)'.
    lv_input = 'a)b(c)d'.
    lv_input =  '))(('.

    DATA(len) = strlen( lv_input ).
    DATA(i) = 0.

*...//Approach 1: Shortened Two Pass String Builder
    DATA(openseen) = 0.
    DATA(balance) = 0.
    CLEAR result.
    i = 0.
    WHILE i < len.
      DATA(c) = lv_input+i(1).
      IF c = '('.
        openseen += 1.
        balance += 1.
      ENDIF.
      IF c = ')'.
        IF balance = 0.
          i = i + 1.
          CONTINUE.
        ELSE.
          balance -= 1.
        ENDIF.
      ENDIF.
      result = result && c.
      i = i + 1.
    ENDWHILE.

    DATA(opentokeep) = openseen - balance.
    DATA(lv_temp) = result.
    CLEAR result.
    len = strlen( lv_temp ).
    i = 0.
    WHILE i < len.
      c = lv_temp+i(1).
      IF c = '('.
        opentokeep -= 1.
        IF ( opentokeep < 0 ).
          i = i + 1.
          CONTINUE.
        ENDIF.
      ENDIF.
      result = result && c.
      i = i + 1.
    ENDWHILE.

*..//Display output
    WRITE:/ lv_input, result.

  ENDMETHOD.
ENDCLASS.


START-OF-SELECTION.
  zcl_utility=>make_valid_parentheses( ).
